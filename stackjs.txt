Definition:

A stack is a linear data structure that follows the Last In First Out (LIFO) principle. 
The last element added to the stack will be the first element removed.

Basic Operations:

Push: Add an element to the top of the stack.
Pop: Remove the top element from the stack.
Peek/Top: Retrieve the top element without removing it.
isEmpty: Check if the stack is empty.
Size: Return the number of elements in the stack.

Characteristics:
LIFO Principle: The most recently added element is the first to be removed.
Dynamic Size: The size of the stack can grow or shrink dynamically as elements are added or removed.

Implementation:
Array-Based Implementation: 
Stack can be implemented using arrays where push and pop operations are performed at the end of the array.
Linked List-Based Implementation: 
Stack can be implemented using linked lists where the head of the list represents the top of the stack.

Time Complexity
Push: 𝑂(1)
Pop: 𝑂(1)
Peek:𝑂(1)
isEmpty: 𝑂(1)
Size:𝑂(1)
Space Complexity
Space complexity depends on the number of elements in the stack. 
If the stack contains n elements, the space complexity is 𝑂(𝑛).